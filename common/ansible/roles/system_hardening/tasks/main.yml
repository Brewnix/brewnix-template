---
# system_hardening/tasks/main.yml
# System security hardening and CIS compliance

- name: "Hardening | Update system packages"
  ansible.builtin.package:
    name: "*"
    state: latest
  tags:
    - hardening
    - updates

- name: "Hardening | Install security packages"
  ansible.builtin.package:
    name:
      - fail2ban
      - ufw
      - aide
      - auditd
      - rkhunter
      - chkrootkit
      - lynis
      - unattended-upgrades
    state: present
  tags:
    - hardening
    - packages

- name: "Hardening | Configure automatic security updates"
  ansible.builtin.template:
    src: 50unattended-upgrades.j2
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    owner: root
    group: root
    mode: '0644'
  when: ansible_os_family == "Debian"
  tags:
    - hardening
    - auto_updates

- name: "Hardening | Configure SSH hardening"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: true
  loop:
    - regexp: "^#?PermitRootLogin"
      line: "PermitRootLogin no"
    - regexp: "^#?PasswordAuthentication"
      line: "PasswordAuthentication no"
    - regexp: "^#?PubkeyAuthentication"
      line: "PubkeyAuthentication yes"
    - regexp: "^#?Protocol"
      line: "Protocol 2"
    - regexp: "^#?MaxAuthTries"
      line: "MaxAuthTries 3"
    - regexp: "^#?ClientAliveInterval"
      line: "ClientAliveInterval 300"
    - regexp: "^#?ClientAliveCountMax"
      line: "ClientAliveCountMax 2"
    - regexp: "^#?LoginGraceTime"
      line: "LoginGraceTime 60"
    - regexp: "^#?PermitEmptyPasswords"
      line: "PermitEmptyPasswords no"
    - regexp: "^#?X11Forwarding"
      line: "X11Forwarding no"
    - regexp: "^#?AllowUsers"
      line: "AllowUsers {{ ssh_allowed_users | default('root') }}"
  notify: restart ssh
  tags:
    - hardening
    - ssh

- name: "Hardening | Configure firewall with UFW"
  community.general.ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    src: "{{ item.src | default(omit) }}"
    dest: "{{ item.dest | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
  loop: "{{ firewall_rules | default([]) }}"
  tags:
    - hardening
    - firewall

- name: "Hardening | Enable UFW firewall"
  community.general.ufw:
    state: enabled
    policy: deny
    direction: incoming
  tags:
    - hardening
    - firewall

- name: "Hardening | Configure Fail2Ban"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - src: jail.local.j2
      dest: /etc/fail2ban/jail.local
    - src: fail2ban.local.j2
      dest: /etc/fail2ban/fail2ban.local
  notify: restart fail2ban
  tags:
    - hardening
    - fail2ban

- name: "Hardening | Configure system audit (auditd)"
  ansible.builtin.template:
    src: audit.rules.j2
    dest: /etc/audit/rules.d/audit.rules
    owner: root
    group: root
    mode: '0640'
  notify: restart auditd
  tags:
    - hardening
    - audit

- name: "Hardening | Configure kernel parameters"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop:
    # Network security
    - name: net.ipv4.ip_forward
      value: "{{ ip_forward_enabled | default('0') }}"
    - name: net.ipv4.conf.all.send_redirects
      value: '0'
    - name: net.ipv4.conf.default.send_redirects
      value: '0'
    - name: net.ipv4.conf.all.accept_redirects
      value: '0'
    - name: net.ipv4.conf.default.accept_redirects
      value: '0'
    - name: net.ipv4.conf.all.accept_source_route
      value: '0'
    - name: net.ipv4.conf.default.accept_source_route
      value: '0'
    - name: net.ipv4.conf.all.log_martians
      value: '1'
    - name: net.ipv4.conf.default.log_martians
      value: '1'
    - name: net.ipv4.icmp_echo_ignore_broadcasts
      value: '1'
    - name: net.ipv4.icmp_ignore_bogus_error_responses
      value: '1'
    - name: net.ipv4.tcp_syncookies
      value: '1'
    # Memory protection
    - name: kernel.dmesg_restrict
      value: '1'
    - name: kernel.kptr_restrict
      value: '2'
    - name: kernel.yama.ptrace_scope
      value: '1'
    # File system security
    - name: fs.suid_dumpable
      value: '0'
    - name: fs.protected_hardlinks
      value: '1'
    - name: fs.protected_symlinks
      value: '1'
  tags:
    - hardening
    - kernel

- name: "Hardening | Disable unused filesystems"
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blacklist-filesystems.conf
    line: "install {{ item }} /bin/true"
    create: true
    owner: root
    group: root
    mode: '0644'
  loop:
    - cramfs
    - freevxfs
    - jffs2
    - hfs
    - hfsplus
    - squashfs
    - udf
  tags:
    - hardening
    - filesystems

- name: "Hardening | Disable unused network protocols"
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blacklist-protocols.conf
    line: "install {{ item }} /bin/true"
    create: true
    owner: root
    group: root
    mode: '0644'
  loop:
    - dccp
    - sctp
    - rds
    - tipc
  tags:
    - hardening
    - protocols

- name: "Hardening | Configure file permissions"
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode }}"
  loop:
    - path: /etc/passwd
      mode: '0644'
    - path: /etc/group
      mode: '0644'
    - path: /etc/shadow
      mode: '0640'
      group: shadow
    - path: /etc/gshadow
      mode: '0640'
      group: shadow
    - path: /etc/ssh/sshd_config
      mode: '0600'
    - path: /boot/grub/grub.cfg
      mode: '0600'
  tags:
    - hardening
    - permissions

- name: "Hardening | Configure password policy"
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: "^PASS_MAX_DAYS"
      line: "PASS_MAX_DAYS 90"
    - regexp: "^PASS_MIN_DAYS"
      line: "PASS_MIN_DAYS 7"
    - regexp: "^PASS_WARN_AGE"
      line: "PASS_WARN_AGE 14"
    - regexp: "^UMASK"
      line: "UMASK 027"
  tags:
    - hardening
    - passwords

- name: "Hardening | Install and configure AIDE (file integrity)"
  block:
    - name: "Hardening | Initialize AIDE database"
      ansible.builtin.command:
        cmd: aideinit
        creates: /var/lib/aide/aide.db.new

    - name: "Hardening | Copy AIDE database"
      ansible.builtin.command:
        cmd: cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db
        creates: /var/lib/aide/aide.db

    - name: "Hardening | Setup AIDE check cron job"
      ansible.builtin.cron:
        name: "AIDE file integrity check"
        minute: "0"
        hour: "{{ aide_check_hour | default('4') }}"
        job: "/usr/bin/aide --check"
        user: root

  tags:
    - hardening
    - aide

- name: "Hardening | Configure log retention"
  ansible.builtin.lineinfile:
    path: /etc/logrotate.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: "^weekly"
      line: "daily"
    - regexp: "^rotate 4"
      line: "rotate {{ log_retention_days | default('30') }}"
    - regexp: "^#compress"
      line: "compress"
  tags:
    - hardening
    - logging

- name: "Hardening | Setup security monitoring scripts"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0755'
  loop:
    - src: security-check.sh.j2
      dest: /usr/local/bin/security-check.sh
    - src: system-health.sh.j2
      dest: /usr/local/bin/system-health.sh
  tags:
    - hardening
    - monitoring

- name: "Hardening | Setup security check cron job"
  ansible.builtin.cron:
    name: "Security health check"
    minute: "0"
    hour: "{{ security_check_hour | default('3') }}"
    job: "/usr/local/bin/security-check.sh"
    user: root
  tags:
    - hardening
    - monitoring

- name: "Hardening | Enable and start security services"
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - fail2ban
    - auditd
  tags:
    - hardening
    - services

- name: "Hardening | Run Lynis security audit"
  ansible.builtin.command:
    cmd: lynis audit system --quick
  register: lynis_audit
  changed_when: false
  when: run_security_audit | default(false)
  tags:
    - hardening
    - audit

- name: "Hardening | Display Lynis audit summary"
  ansible.builtin.debug:
    msg: "{{ lynis_audit.stdout_lines[-20:] }}"
  when: 
    - run_security_audit | default(false)
    - lynis_audit is defined
  tags:
    - hardening
    - audit
