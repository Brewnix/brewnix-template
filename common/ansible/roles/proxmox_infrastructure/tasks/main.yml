---
# proxmox_infrastructure/tasks/main.yml
# Common Proxmox infrastructure setup and configuration

- name: "Proxmox Infrastructure | Verify Proxmox VE host connectivity"
  ansible.builtin.ping:
  delegate_to: "{{ item }}"
  loop: "{{ groups['proxmox_hosts'] | default([]) }}"
  tags:
    - proxmox
    - connectivity

- name: "Proxmox Infrastructure | Gather Proxmox node information"
  ansible.builtin.uri:
    url: "https://{{ item }}:8006/api2/json/nodes"
    method: GET
    headers:
      Authorization: "PVEAPIToken={{ proxmox_api_user }}!{{ proxmox_api_token }}={{ proxmox_api_secret }}"
    validate_certs: false
  register: proxmox_nodes
  loop: "{{ groups['proxmox_hosts'] | default([]) }}"
  tags:
    - proxmox
    - node_info

- name: "Proxmox Infrastructure | Configure Proxmox storage"
  ansible.builtin.uri:
    url: "https://{{ item }}:8006/api2/json/storage"
    method: POST
    headers:
      Authorization: "PVEAPIToken={{ proxmox_api_user }}!{{ proxmox_api_token }}={{ proxmox_api_secret }}"
    body_format: form-urlencoded
    body:
      storage: "{{ proxmox_storage.name }}"
      type: "{{ proxmox_storage.type | default('dir') }}"
      path: "{{ proxmox_storage.path | default('/var/lib/vz') }}"
      content: "{{ proxmox_storage.content | default('images,iso,vztmpl') }}"
    validate_certs: false
  loop: "{{ groups['proxmox_hosts'] | default([]) }}"
  when: proxmox_storage is defined
  tags:
    - proxmox
    - storage

- name: "Proxmox Infrastructure | Configure Proxmox networking"
  ansible.builtin.uri:
    url: "https://{{ item.host }}:8006/api2/json/nodes/{{ item.node }}/network"
    method: POST
    headers:
      Authorization: "PVEAPIToken={{ proxmox_api_user }}!{{ proxmox_api_token }}={{ proxmox_api_secret }}"
    body_format: form-urlencoded
    body:
      iface: "{{ item.interface }}"
      type: "{{ item.type | default('bridge') }}"
      bridge_ports: "{{ item.bridge_ports | default('') }}"
      address: "{{ item.address | default('') }}"
      netmask: "{{ item.netmask | default('') }}"
      gateway: "{{ item.gateway | default('') }}"
    validate_certs: false
  loop: "{{ proxmox_networks | default([]) }}"
  tags:
    - proxmox
    - networking

- name: "Proxmox Infrastructure | Create security VMs"
  ansible.builtin.uri:
    url: "https://{{ item.host }}:8006/api2/json/nodes/{{ item.node }}/qemu"
    method: POST
    headers:
      Authorization: "PVEAPIToken={{ proxmox_api_user }}!{{ proxmox_api_token }}={{ proxmox_api_secret }}"
    body_format: form-urlencoded
    body:
      vmid: "{{ item.vmid }}"
      name: "{{ item.name }}"
      memory: "{{ item.memory | default(2048) }}"
      cores: "{{ item.cores | default(2) }}"
      sockets: "{{ item.sockets | default(1) }}"
      net0: "virtio,bridge={{ item.network_bridge | default('vmbr0') }}"
      scsi0: "{{ item.storage | default('local-lvm') }}:{{ item.disk_size | default(32) }}"
      ostype: "{{ item.ostype | default('l26') }}"
      boot: "{{ item.boot | default('order=scsi0;net0') }}"
      ide2: "{{ item.iso_storage | default('local') }}:iso/{{ item.iso_file }},media=cdrom"
    validate_certs: false
  register: vm_creation
  loop: "{{ security_vms | default([]) }}"
  tags:
    - proxmox
    - vm_creation

- name: "Proxmox Infrastructure | Start security VMs"
  ansible.builtin.uri:
    url: "https://{{ item.host }}:8006/api2/json/nodes/{{ item.node }}/qemu/{{ item.vmid }}/status/start"
    method: POST
    headers:
      Authorization: "PVEAPIToken={{ proxmox_api_user }}!{{ proxmox_api_token }}={{ proxmox_api_secret }}"
    validate_certs: false
  loop: "{{ security_vms | default([]) }}"
  when: item.autostart | default(true)
  tags:
    - proxmox
    - vm_start

- name: "Proxmox Infrastructure | Wait for VMs to be accessible"
  ansible.builtin.wait_for:
    host: "{{ item.ip_address }}"
    port: 22
    delay: 30
    timeout: 300
  loop: "{{ security_vms | default([]) }}"
  when: item.ip_address is defined
  tags:
    - proxmox
    - vm_wait
