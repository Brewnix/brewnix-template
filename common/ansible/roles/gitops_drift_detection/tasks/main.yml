---
# gitops_drift_detection/tasks/main.yml
# GitOps drift detection and automated sync

- name: "GitOps | Install Git and dependencies"
  ansible.builtin.package:
    name:
      - git
      - python3
      - python3-pip
      - python3-yaml
      - python3-requests
      - jq
    state: present
  tags:
    - gitops
    - packages

- name: "GitOps | Create GitOps user"
  ansible.builtin.user:
    name: gitops
    system: true
    shell: /bin/bash
    home: /var/lib/gitops
    create_home: true
  tags:
    - gitops
    - users

- name: "GitOps | Create GitOps directories"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: gitops
    group: gitops
    mode: '0755'
  loop:
    - /var/lib/gitops
    - /var/lib/gitops/repos
    - /var/lib/gitops/state
    - /var/lib/gitops/backups
    - /var/log/gitops
    - /etc/gitops
  tags:
    - gitops
    - directories

- name: "GitOps | Setup SSH key for GitOps"
  ansible.builtin.user:
    name: gitops
    generate_ssh_key: true
    ssh_key_type: ed25519
    ssh_key_file: .ssh/id_ed25519
  tags:
    - gitops
    - ssh

- name: "GitOps | Configure Git for GitOps user"
  ansible.builtin.git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  become_user: gitops
  become: true
  loop:
    - name: user.name
      value: "{{ gitops_git_user_name | default('GitOps Bot') }}"
    - name: user.email
      value: "{{ gitops_git_user_email | default('gitops@localhost') }}"
    - name: init.defaultBranch
      value: main
    - name: pull.rebase
      value: "false"
  tags:
    - gitops
    - git_config

- name: "GitOps | Clone GitOps repository"
  ansible.builtin.git:
    repo: "{{ gitops_repository_url }}"
    dest: "/var/lib/gitops/repos/{{ gitops_repo_name | default('config') }}"
    version: "{{ gitops_branch | default('main') }}"
    force: true
  become_user: gitops
  become: true
  when: gitops_repository_url is defined
  tags:
    - gitops
    - clone

- name: "GitOps | Template drift detection script"
  ansible.builtin.template:
    src: drift-detector.sh.j2
    dest: /usr/local/bin/drift-detector.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - gitops
    - scripts

- name: "GitOps | Template GitOps sync script"
  ansible.builtin.template:
    src: gitops-sync.sh.j2
    dest: /usr/local/bin/gitops-sync.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - gitops
    - scripts

- name: "GitOps | Template configuration backup script"
  ansible.builtin.template:
    src: config-backup.sh.j2
    dest: /usr/local/bin/config-backup.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - gitops
    - backup

- name: "GitOps | Template drift detection systemd service"
  ansible.builtin.template:
    src: brewnix-drift-detection.service.j2
    dest: /etc/systemd/system/brewnix-drift-detection.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart drift detection
  tags:
    - gitops
    - systemd

- name: "GitOps | Template GitOps configuration file"
  ansible.builtin.template:
    src: gitops.conf.j2
    dest: /etc/gitops/gitops.conf
    owner: root
    group: gitops
    mode: '0640'
  tags:
    - gitops
    - config

- name: "GitOps | Create state tracking file"
  ansible.builtin.copy:
    content: |
      {
        "last_sync": "never",
        "last_drift_check": "never",
        "repository_url": "{{ gitops_repository_url | default('') }}",
        "branch": "{{ gitops_branch | default('main') }}",
        "site_name": "{{ site_name | default('unknown') }}",
        "vendor_type": "{{ vendor_type | default('unknown') }}"
      }
    dest: /var/lib/gitops/state/gitops-state.json
    owner: gitops
    group: gitops
    mode: '0644'
    force: false
  tags:
    - gitops
    - state

- name: "GitOps | Setup notification webhooks"
  ansible.builtin.template:
    src: webhook-notify.sh.j2
    dest: /usr/local/bin/webhook-notify.sh
    owner: root
    group: root
    mode: '0755'
  when: gitops_webhook_url is defined
  tags:
    - gitops
    - notifications

- name: "GitOps | Enable and start drift detection service"
  ansible.builtin.systemd:
    name: brewnix-drift-detection
    enabled: true
    state: started
    daemon_reload: true
  when: gitops_drift_detection_enabled | default(true)
  tags:
    - gitops
    - service

- name: "GitOps | Setup GitOps sync cron job"
  ansible.builtin.cron:
    name: "GitOps sync"
    minute: "{{ gitops_sync_minute | default('*/5') }}"
    job: "/usr/local/bin/gitops-sync.sh"
    user: gitops
  when: gitops_auto_sync | default(true)
  tags:
    - gitops
    - cron

- name: "GitOps | Setup configuration backup cron job"
  ansible.builtin.cron:
    name: "Configuration backup"
    minute: "0"
    hour: "{{ gitops_backup_hour | default('1') }}"
    job: "/usr/local/bin/config-backup.sh"
    user: gitops
  when: gitops_backup_enabled | default(true)
  tags:
    - gitops
    - backup

- name: "GitOps | Create initial configuration snapshot"
  ansible.builtin.command:
    cmd: /usr/local/bin/config-backup.sh
  become_user: gitops
  become: true
  changed_when: true
  tags:
    - gitops
    - initial_backup

- name: "GitOps | Perform initial GitOps sync"
  ansible.builtin.command:
    cmd: /usr/local/bin/gitops-sync.sh
  become_user: gitops
  become: true
  when: gitops_repository_url is defined
  changed_when: true
  tags:
    - gitops
    - initial_sync

- name: "GitOps | Verify drift detection service"
  ansible.builtin.systemd:
    name: brewnix-drift-detection
    state: started
  register: drift_service_status
  when: gitops_drift_detection_enabled | default(true)
  tags:
    - gitops
    - verification

- name: "GitOps | Check drift detection logs"
  ansible.builtin.command:
    cmd: journalctl -u brewnix-drift-detection --no-pager -n 10
  register: drift_logs
  changed_when: false
  when: gitops_drift_detection_enabled | default(true)
  tags:
    - gitops
    - verification

- name: "GitOps | Install GitOps monitoring metrics"
  ansible.builtin.template:
    src: gitops-metrics.py.j2
    dest: /usr/local/bin/gitops-metrics.py
    owner: root
    group: root
    mode: '0755'
  when: gitops_prometheus_metrics | default(true)
  tags:
    - gitops
    - metrics

- name: "GitOps | Setup GitOps metrics collection"
  ansible.builtin.systemd:
    name: gitops-metrics
    enabled: true
    state: started
  when: gitops_prometheus_metrics | default(true)
  tags:
    - gitops
    - metrics
