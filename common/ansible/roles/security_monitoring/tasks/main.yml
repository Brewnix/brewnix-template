---
# security_monitoring/tasks/main.yml
# Security monitoring stack (Prometheus, Grafana, Zeek, etc.)

- name: "Security Monitoring | Create monitoring user"
  ansible.builtin.user:
    name: monitoring
    system: true
    shell: /bin/false
    home: /var/lib/monitoring
    create_home: true
  tags:
    - monitoring
    - users

- name: "Security Monitoring | Install Docker and Docker Compose"
  ansible.builtin.package:
    name:
      - docker.io
      - docker-compose
      - python3-docker
    state: present
  tags:
    - monitoring
    - docker

- name: "Security Monitoring | Start and enable Docker service"
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true
  tags:
    - monitoring
    - docker

- name: "Security Monitoring | Add monitoring user to docker group"
  ansible.builtin.user:
    name: monitoring
    groups: docker
    append: true
  tags:
    - monitoring
    - users

- name: "Security Monitoring | Create monitoring directories"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: monitoring
    group: monitoring
    mode: '0755'
  loop:
    - /var/lib/monitoring
    - /var/lib/monitoring/prometheus
    - /var/lib/monitoring/grafana
    - /var/lib/monitoring/alertmanager
    - /var/lib/monitoring/zeek
    - /etc/monitoring
  tags:
    - monitoring
    - directories

- name: "Security Monitoring | Template Prometheus configuration"
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/monitoring/prometheus.yml
    owner: monitoring
    group: monitoring
    mode: '0644'
  notify: restart monitoring stack
  tags:
    - monitoring
    - prometheus

- name: "Security Monitoring | Template Grafana configuration"
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /etc/monitoring/grafana.ini
    owner: monitoring
    group: monitoring
    mode: '0644'
  notify: restart monitoring stack
  tags:
    - monitoring
    - grafana

- name: "Security Monitoring | Template Alertmanager configuration"
  ansible.builtin.template:
    src: alertmanager.yml.j2
    dest: /etc/monitoring/alertmanager.yml
    owner: monitoring
    group: monitoring
    mode: '0644'
  notify: restart monitoring stack
  tags:
    - monitoring
    - alertmanager

- name: "Security Monitoring | Template Docker Compose for monitoring stack"
  ansible.builtin.template:
    src: docker-compose-monitoring.yml.j2
    dest: /var/lib/monitoring/docker-compose.yml
    owner: monitoring
    group: monitoring
    mode: '0644'
  notify: restart monitoring stack
  tags:
    - monitoring
    - compose

- name: "Security Monitoring | Install Zeek network monitor"
  ansible.builtin.package:
    name:
      - zeek
      - zeekctl
    state: present
  tags:
    - monitoring
    - zeek

- name: "Security Monitoring | Configure Zeek"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - src: zeek-node.cfg.j2
      dest: /opt/zeek/etc/node.cfg
    - src: zeek-networks.cfg.j2
      dest: /opt/zeek/etc/networks.cfg
    - src: zeek-zeekctl.cfg.j2
      dest: /opt/zeek/etc/zeekctl.cfg
  notify: restart zeek
  tags:
    - monitoring
    - zeek

- name: "Security Monitoring | Deploy Zeek cluster"
  ansible.builtin.command:
    cmd: zeekctl deploy
    chdir: /opt/zeek
  become_user: root
  tags:
    - monitoring
    - zeek

- name: "Security Monitoring | Start monitoring stack"
  community.docker.docker_compose:
    project_src: /var/lib/monitoring
    state: present
    restarted: true
  become_user: monitoring
  tags:
    - monitoring
    - docker_compose

- name: "Security Monitoring | Configure log shipping to monitoring"
  ansible.builtin.template:
    src: filebeat-monitoring.yml.j2
    dest: /etc/filebeat/conf.d/monitoring.yml
    owner: root
    group: root
    mode: '0600'
  when: monitoring_log_shipping | default(true)
  notify: restart filebeat
  tags:
    - monitoring
    - logging

- name: "Security Monitoring | Install ntopng network monitor"
  ansible.builtin.package:
    name:
      - ntopng
      - redis-server
    state: present
  when: monitoring_ntopng_enabled | default(true)
  tags:
    - monitoring
    - ntopng

- name: "Security Monitoring | Configure ntopng"
  ansible.builtin.template:
    src: ntopng.conf.j2
    dest: /etc/ntopng/ntopng.conf
    owner: root
    group: root
    mode: '0644'
  when: monitoring_ntopng_enabled | default(true)
  notify: restart ntopng
  tags:
    - monitoring
    - ntopng

- name: "Security Monitoring | Start and enable ntopng"
  ansible.builtin.systemd:
    name: ntopng
    state: started
    enabled: true
  when: monitoring_ntopng_enabled | default(true)
  tags:
    - monitoring
    - ntopng

- name: "Security Monitoring | Configure Grafana data sources"
  ansible.builtin.uri:
    url: "http://{{ monitoring_grafana_host | default('localhost') }}:{{ monitoring_grafana_port | default('3000') }}/api/datasources"
    method: POST
    user: admin
    password: "{{ monitoring_grafana_admin_password }}"
    body_format: json
    body:
      name: "{{ item.name }}"
      type: "{{ item.type }}"
      url: "{{ item.url }}"
      access: proxy
      isDefault: "{{ item.default | default(false) }}"
    status_code: [200, 409]  # 409 if already exists
  loop: "{{ monitoring_grafana_datasources | default([]) }}"
  tags:
    - monitoring
    - grafana_datasources

- name: "Security Monitoring | Import Grafana dashboards"
  ansible.builtin.uri:
    url: "http://{{ monitoring_grafana_host | default('localhost') }}:{{ monitoring_grafana_port | default('3000') }}/api/dashboards/db"
    method: POST
    user: admin
    password: "{{ monitoring_grafana_admin_password }}"
    body_format: json
    body:
      dashboard: "{{ lookup('file', item) | from_json }}"
      overwrite: true
  loop: "{{ monitoring_grafana_dashboards | default([]) }}"
  tags:
    - monitoring
    - grafana_dashboards

- name: "Security Monitoring | Setup log retention policies"
  ansible.builtin.cron:
    name: "Clean old monitoring logs"
    minute: "0"
    hour: "2"
    job: "find /var/log -name '*.log' -type f -mtime +{{ monitoring_log_retention_days | default(30) }} -delete"
    user: root
  tags:
    - monitoring
    - log_retention

- name: "Security Monitoring | Verify monitoring services"
  ansible.builtin.uri:
    url: "{{ item.url }}"
    method: GET
    status_code: 200
  loop:
    - name: Prometheus
      url: "http://{{ monitoring_prometheus_host | default('localhost') }}:{{ monitoring_prometheus_port | default('9090') }}/api/v1/query?query=up"
    - name: Grafana
      url: "http://{{ monitoring_grafana_host | default('localhost') }}:{{ monitoring_grafana_port | default('3000') }}/api/health"
  tags:
    - monitoring
    - verification
